// <auto-generated />
using System;
using EFCoreApp.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreApp.Domain.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFCoreApp.Domain.Entities.BusinessUnit", b =>
                {
                    b.Property<int>("BusinessUnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusinessUnitId"));

                    b.Property<int>("BaseCurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("BusinessUnitCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessUnitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReportCurrencyId")
                        .HasColumnType("int");

                    b.HasKey("BusinessUnitId");

                    b.HasIndex("BaseCurrencyId");

                    b.HasIndex("ReportCurrencyId");

                    b.ToTable("BusinessUnits");

                    b.HasData(
                        new
                        {
                            BusinessUnitId = 1,
                            BaseCurrencyId = 1,
                            BusinessUnitCode = "ADY",
                            BusinessUnitName = "Azərbaycan Dəmir yolları",
                            ReportCurrencyId = 1
                        });
                });

            modelBuilder.Entity("EFCoreApp.Domain.Entities.Currency", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurrencyId"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrencyKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CurrencyId");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            CurrencyId = 1,
                            CurrencyKey = "AZN",
                            CurrencyName = "Azərbaycan manatı"
                        });
                });

            modelBuilder.Entity("EFCoreApp.Domain.Entities.BusinessUnit", b =>
                {
                    b.HasOne("EFCoreApp.Domain.Entities.Currency", "BaseCurrency")
                        .WithMany("BaseBusinessUnits")
                        .HasForeignKey("BaseCurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EFCoreApp.Domain.Entities.Currency", "ReportCurrency")
                        .WithMany("ReportBusinessUnits")
                        .HasForeignKey("ReportCurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BaseCurrency");

                    b.Navigation("ReportCurrency");
                });

            modelBuilder.Entity("EFCoreApp.Domain.Entities.Currency", b =>
                {
                    b.Navigation("BaseBusinessUnits");

                    b.Navigation("ReportBusinessUnits");
                });
#pragma warning restore 612, 618
        }
    }
}
